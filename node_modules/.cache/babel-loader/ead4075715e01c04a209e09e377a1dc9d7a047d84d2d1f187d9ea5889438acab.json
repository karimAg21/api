{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karim\\\\Desktop\\\\firstapp\\\\src\\\\redux\\\\Interface.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { user, password } from \"./action\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Interface() {\n  // Example of checking credentials after input change\n  const handleUserInput = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    dispatch({\n      type: name,\n      payload: value\n    }); // 'user' or 'pass'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"user\",\n      value: state.user,\n      onChange: handleUserInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"pass\",\n      value: state.password,\n      onChange: handleUserInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch(verifyCredentials()),\n      children: \"Verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true);\n}\n_c = Interface;\nvar _c;\n$RefreshReg$(_c, \"Interface\");","map":{"version":3,"names":["useDispatch","useSelector","user","password","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Interface","handleUserInput","event","name","value","target","dispatch","type","payload","children","state","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","verifyCredentials","_c","$RefreshReg$"],"sources":["C:/Users/karim/Desktop/firstapp/src/redux/Interface.js"],"sourcesContent":["import { useDispatch,useSelector } from \"react-redux\";\r\nimport { user,password } from \"./action\";\r\nimport { useState } from \"react\";\r\nexport default function Interface(){\r\n    // Example of checking credentials after input change\r\nconst handleUserInput = (event) => {\r\n    const { name, value } = event.target;\r\n    dispatch({ type: name, payload: value }); // 'user' or 'pass'\r\n};\r\n\r\nreturn(\r\n    <><input\r\n    type=\"text\"\r\n    name=\"user\"\r\n    value={state.user}\r\n    onChange={handleUserInput}\r\n/>\r\n<input\r\n    type=\"password\"\r\n    name=\"pass\"\r\n    value={state.password}\r\n    onChange={handleUserInput}\r\n/>\r\n<button onClick={() => dispatch(verifyCredentials())}>Verify</button></>\r\n    \r\n)\r\n\r\n\r\n}"],"mappings":";AAAA,SAASA,WAAW,EAACC,WAAW,QAAQ,aAAa;AACrD,SAASC,IAAI,EAACC,QAAQ,QAAQ,UAAU;AACxC,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACjC,eAAe,SAASC,SAASA,CAAA,EAAE;EAC/B;EACJ,MAAMC,eAAe,GAAIC,KAAK,IAAK;IAC/B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCC,QAAQ,CAAC;MAAEC,IAAI,EAAEJ,IAAI;MAAEK,OAAO,EAAEJ;IAAM,CAAC,CAAC,CAAC,CAAC;EAC9C,CAAC;EAED,oBACIP,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBAAEZ,OAAA;MACFU,IAAI,EAAC,MAAM;MACXJ,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEM,KAAK,CAACjB,IAAK;MAClBkB,QAAQ,EAAEV;IAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFlB,OAAA;MACIU,IAAI,EAAC,UAAU;MACfJ,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEM,KAAK,CAAChB,QAAS;MACtBiB,QAAQ,EAAEV;IAAgB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFlB,OAAA;MAAQmB,OAAO,EAAEA,CAAA,KAAMV,QAAQ,CAACW,iBAAiB,CAAC,CAAC,CAAE;MAAAR,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAAE,CAAC;AAKxE;AAACG,EAAA,GAzBuBlB,SAAS;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
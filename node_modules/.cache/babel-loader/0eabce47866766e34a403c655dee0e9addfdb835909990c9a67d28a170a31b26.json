{"ast":null,"code":"const initialState = {\n  docteur: [{\n    id: 1,\n    nom: 'ahmed',\n    spécialité: 'Cardiologue',\n    Tele: '060000',\n    email: 'ahmed@gmail.com'\n  }, {\n    id: 2,\n    nom: 'samir',\n    spécialité: 'Dermatologue',\n    Tele: '09999',\n    email: 'samir@gmail.com'\n  }]\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ajouter':\n      return {\n        ...state,\n        docteur: [...state.docteur, action.payload]\n      };\n    case \"supprimer\":\n      return {\n        ...state,\n        docteur: [...state.docteur.filter(function (docteurs) {\n          return docteurs.id !== action.payload;\n        })]\n      };\n    case 'modifier':\n      const docteurs = state.docteur.find(p => {\n        return p.id === action.payload.id;\n      });\n      if (docteurs) {\n        docteurs.nom = action.payload.nom;\n        docteurs.prix = action.payload.prix;\n        docteurs.quantity = action.payload.quantity;\n      }\n      return state;\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","docteur","id","nom","spécialité","Tele","email","reducer","state","action","type","payload","filter","docteurs","find","p","prix","quantity"],"sources":["C:/Users/karim/Desktop/firstapp/src/ControleRedux.js/Exercice1/reducer.js"],"sourcesContent":["const initialState = {\r\n    docteur : [\r\n        {id:1,nom:'ahmed',spécialité:'Cardiologue',Tele:'060000',email:'ahmed@gmail.com'},\r\n        {id:2,nom:'samir',spécialité:'Dermatologue',Tele:'09999',email:'samir@gmail.com'}\r\n\r\n    ]\r\n}\r\nconst reducer = (state=initialState , action)=>{\r\n    switch(action.type){\r\n        case 'ajouter':\r\n            return {...state,docteur:[...state.docteur,action.payload]}\r\n        case \"supprimer\" : \r\n            return{...state,docteur:[...state.docteur.filter(function (docteurs) { \r\n                return docteurs.id !== action.payload\r\n             })]}\r\n        case 'modifier':\r\n            const docteurs = state.docteur.find((p)=>{\r\n                return p.id === action.payload.id  \r\n            })\r\n            if(docteurs){\r\n                docteurs.nom=action.payload.nom\r\n                docteurs.prix=action.payload.prix\r\n                docteurs.quantity=action.payload.quantity\r\n            }\r\n            return state\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer ;"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,OAAO,EAAG,CACN;IAACC,EAAE,EAAC,CAAC;IAACC,GAAG,EAAC,OAAO;IAACC,UAAU,EAAC,aAAa;IAACC,IAAI,EAAC,QAAQ;IAACC,KAAK,EAAC;EAAiB,CAAC,EACjF;IAACJ,EAAE,EAAC,CAAC;IAACC,GAAG,EAAC,OAAO;IAACC,UAAU,EAAC,cAAc;IAACC,IAAI,EAAC,OAAO;IAACC,KAAK,EAAC;EAAiB,CAAC;AAGzF,CAAC;AACD,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAACR,YAAY,EAAGS,MAAM,KAAG;EAC3C,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,SAAS;MACV,OAAO;QAAC,GAAGF,KAAK;QAACP,OAAO,EAAC,CAAC,GAAGO,KAAK,CAACP,OAAO,EAACQ,MAAM,CAACE,OAAO;MAAC,CAAC;IAC/D,KAAK,WAAW;MACZ,OAAM;QAAC,GAAGH,KAAK;QAACP,OAAO,EAAC,CAAC,GAAGO,KAAK,CAACP,OAAO,CAACW,MAAM,CAAC,UAAUC,QAAQ,EAAE;UACjE,OAAOA,QAAQ,CAACX,EAAE,KAAKO,MAAM,CAACE,OAAO;QACxC,CAAC,CAAC;MAAC,CAAC;IACT,KAAK,UAAU;MACX,MAAME,QAAQ,GAAGL,KAAK,CAACP,OAAO,CAACa,IAAI,CAAEC,CAAC,IAAG;QACrC,OAAOA,CAAC,CAACb,EAAE,KAAKO,MAAM,CAACE,OAAO,CAACT,EAAE;MACrC,CAAC,CAAC;MACF,IAAGW,QAAQ,EAAC;QACRA,QAAQ,CAACV,GAAG,GAACM,MAAM,CAACE,OAAO,CAACR,GAAG;QAC/BU,QAAQ,CAACG,IAAI,GAACP,MAAM,CAACE,OAAO,CAACK,IAAI;QACjCH,QAAQ,CAACI,QAAQ,GAACR,MAAM,CAACE,OAAO,CAACM,QAAQ;MAC7C;MACA,OAAOT,KAAK;IAChB;MACI,OAAOA,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
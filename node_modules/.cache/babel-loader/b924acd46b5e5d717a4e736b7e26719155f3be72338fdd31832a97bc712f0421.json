{"ast":null,"code":"const initialState = {\n  user: '',\n  password: '',\n  isAuthenticated: false,\n  loginError: null\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"user\":\n      return {\n        ...state,\n        user: action.payload\n      };\n    case \"pass\":\n      return {\n        ...state,\n        password: action.payload\n      };\n    case \"verify\":\n      const correctCredentials = {\n        user: 'admin',\n        password: '1234'\n      };\n      if (state.user === correctCredentials.user && state.password === correctCredentials.password) {\n        return {\n          ...state,\n          isAuthenticated: true,\n          loginError: null // Clear any previous error if login is successful\n        };\n      } else {\n        return {\n          ...state,\n          isAuthenticated: false,\n          loginError: \"Invalid credentials\" // Set the error message\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","user","password","isAuthenticated","loginError","reducer","state","action","type","payload","correctCredentials"],"sources":["C:/Users/karim/Desktop/firstapp/src/redux/reducer.js"],"sourcesContent":["const initialState = {\r\n    user: '',\r\n    password: '',\r\n    isAuthenticated: false,\r\n    loginError: null\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"user\":\r\n            return { ...state, user: action.payload };\r\n        case \"pass\":\r\n            return { ...state, password: action.payload };\r\n        case \"verify\":\r\n            const correctCredentials = { user: 'admin', password: '1234' };\r\n\r\n            if (state.user === correctCredentials.user && state.password === correctCredentials.password) {\r\n                return {\r\n                    ...state,\r\n                    isAuthenticated: true,\r\n                    loginError: null // Clear any previous error if login is successful\r\n                };\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    isAuthenticated: false,\r\n                    loginError: \"Invalid credentials\" // Set the error message\r\n                };\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,IAAI,EAAE,EAAE;EACRC,QAAQ,EAAE,EAAE;EACZC,eAAe,EAAE,KAAK;EACtBC,UAAU,EAAE;AAChB,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGN,YAAY,EAAEO,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,MAAM;MACP,OAAO;QAAE,GAAGF,KAAK;QAAEL,IAAI,EAAEM,MAAM,CAACE;MAAQ,CAAC;IAC7C,KAAK,MAAM;MACP,OAAO;QAAE,GAAGH,KAAK;QAAEJ,QAAQ,EAAEK,MAAM,CAACE;MAAQ,CAAC;IACjD,KAAK,QAAQ;MACT,MAAMC,kBAAkB,GAAG;QAAET,IAAI,EAAE,OAAO;QAAEC,QAAQ,EAAE;MAAO,CAAC;MAE9D,IAAII,KAAK,CAACL,IAAI,KAAKS,kBAAkB,CAACT,IAAI,IAAIK,KAAK,CAACJ,QAAQ,KAAKQ,kBAAkB,CAACR,QAAQ,EAAE;QAC1F,OAAO;UACH,GAAGI,KAAK;UACRH,eAAe,EAAE,IAAI;UACrBC,UAAU,EAAE,IAAI,CAAC;QACrB,CAAC;MACL,CAAC,MAAM;QACH,OAAO;UACH,GAAGE,KAAK;UACRH,eAAe,EAAE,KAAK;UACtBC,UAAU,EAAE,qBAAqB,CAAC;QACtC,CAAC;MACL;IACJ;MACI,OAAOE,KAAK;EACpB;AACJ,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karim\\\\Desktop\\\\firstapp\\\\src\\\\moviesInfo\\\\Detailsser.js\",\n  _s = $RefreshSig$();\nimport AffichS from \"./Aff\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DetailsS(props) {\n  _s();\n  const {\n    title\n  } = useParams(); // Get the title parameter from URL\n  const [filteredSerie, setFilteredSerie] = useState(null); // State to store filtered series\n\n  useEffect(() => {\n    // Ensure props.serie is available and title is valid\n    if (props.serie && title) {\n      const filterSerie = props.serie.filter(ser => ser.Title === title);\n      setFilteredSerie(filterSerie.length > 0 ? filterSerie : null); // Set filtered data or null\n    }\n  }, [props.serie, title]); // Re-run effect when props.serie or title changes\n\n  // Render the filtered series or a \"not found\" message\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: filteredSerie ? filteredSerie.map(ser => /*#__PURE__*/_jsxDEV(AffichS, {\n      serie: ser\n    }, ser.imdbID, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 36\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Series not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(DetailsS, \"4NRdYk2ieHhuxPUagB1T7QfJ2JM=\", false, function () {\n  return [useParams];\n});\n_c = DetailsS;\nvar _c;\n$RefreshReg$(_c, \"DetailsS\");","map":{"version":3,"names":["AffichS","useEffect","useState","useParams","jsxDEV","_jsxDEV","DetailsS","props","_s","title","filteredSerie","setFilteredSerie","serie","filterSerie","filter","ser","Title","length","children","map","imdbID","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/karim/Desktop/firstapp/src/moviesInfo/Detailsser.js"],"sourcesContent":["import AffichS from \"./Aff\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nexport default function DetailsS(props) {\r\n  const { title } = useParams();  // Get the title parameter from URL\r\n  const [filteredSerie, setFilteredSerie] = useState(null);  // State to store filtered series\r\n\r\n  useEffect(() => {\r\n    // Ensure props.serie is available and title is valid\r\n    if (props.serie && title) {\r\n      const filterSerie = props.serie.filter((ser) => ser.Title === title);\r\n      setFilteredSerie(filterSerie.length > 0 ? filterSerie : null);  // Set filtered data or null\r\n    }\r\n  }, [props.serie, title]);  // Re-run effect when props.serie or title changes\r\n\r\n  // Render the filtered series or a \"not found\" message\r\n  return (\r\n    <div>\r\n      {filteredSerie ? (\r\n        filteredSerie.map((ser) => <AffichS serie={ser} key={ser.imdbID} />)\r\n      ) : (\r\n        <p>Series not found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,OAAO;AAC3B,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAM;IAAEC;EAAM,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EAChC,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAE;;EAE3DD,SAAS,CAAC,MAAM;IACd;IACA,IAAIM,KAAK,CAACK,KAAK,IAAIH,KAAK,EAAE;MACxB,MAAMI,WAAW,GAAGN,KAAK,CAACK,KAAK,CAACE,MAAM,CAAEC,GAAG,IAAKA,GAAG,CAACC,KAAK,KAAKP,KAAK,CAAC;MACpEE,gBAAgB,CAACE,WAAW,CAACI,MAAM,GAAG,CAAC,GAAGJ,WAAW,GAAG,IAAI,CAAC,CAAC,CAAE;IAClE;EACF,CAAC,EAAE,CAACN,KAAK,CAACK,KAAK,EAAEH,KAAK,CAAC,CAAC,CAAC,CAAE;;EAE3B;EACA,oBACEJ,OAAA;IAAAa,QAAA,EACGR,aAAa,GACZA,aAAa,CAACS,GAAG,CAAEJ,GAAG,iBAAKV,OAAA,CAACL,OAAO;MAACY,KAAK,EAAEG;IAAI,GAAMA,GAAG,CAACK,MAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,gBAEpEnB,OAAA;MAAAa,QAAA,EAAG;IAAiB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACxB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAChB,EAAA,CAtBuBF,QAAQ;EAAA,QACZH,SAAS;AAAA;AAAAsB,EAAA,GADLnB,QAAQ;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
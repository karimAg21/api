{"ast":null,"code":"const initialestate = {\n  user: 'admin',\n  pass: '1234'\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"user\":\n      return {\n        ...state,\n        user: action.payload\n      };\n    case \"pass\":\n      return {\n        ...state,\n        password: action.payload\n      };\n    case \"verify\":\n      // Now you can store valid credentials somewhere or keep them hardcoded\n      const correctCredentials = {\n        user: 'admin',\n        password: '1234'\n      };\n\n      // Check if the user and password match\n      if (state.user === correctCredentials.user && state.password === correctCredentials.password) {\n        return {\n          ...state,\n          isAuthenticated: true,\n          loginError: null // Reset error message if login is successful\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialestate","user","pass","reducer","state","initialState","action","type","payload","password","correctCredentials","isAuthenticated","loginError"],"sources":["C:/Users/karim/Desktop/firstapp/src/redux/reducer.js"],"sourcesContent":["const initialestate={\r\n    user:'admin',\r\n    pass:'1234'\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"user\":\r\n            return { ...state,user: action.payload };\r\n        case \"pass\":\r\n            return { ...state, password: action.payload };\r\n        case \"verify\":\r\n            // Now you can store valid credentials somewhere or keep them hardcoded\r\n            const correctCredentials = { user: 'admin', password: '1234' };\r\n\r\n            // Check if the user and password match\r\n            if (state.user === correctCredentials.user && state.password === correctCredentials.password) {\r\n                return {\r\n                    ...state,\r\n                    isAuthenticated: true,\r\n                    loginError: null // Reset error message if login is successful\r\n                };\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\nexport default reducer"],"mappings":"AAAA,MAAMA,aAAa,GAAC;EAChBC,IAAI,EAAC,OAAO;EACZC,IAAI,EAAC;AACT,CAAC;AACD,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGC,YAAY,EAAEC,MAAM,KAAK;EAC9C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,MAAM;MACP,OAAO;QAAE,GAAGH,KAAK;QAACH,IAAI,EAAEK,MAAM,CAACE;MAAQ,CAAC;IAC5C,KAAK,MAAM;MACP,OAAO;QAAE,GAAGJ,KAAK;QAAEK,QAAQ,EAAEH,MAAM,CAACE;MAAQ,CAAC;IACjD,KAAK,QAAQ;MACT;MACA,MAAME,kBAAkB,GAAG;QAAET,IAAI,EAAE,OAAO;QAAEQ,QAAQ,EAAE;MAAO,CAAC;;MAE9D;MACA,IAAIL,KAAK,CAACH,IAAI,KAAKS,kBAAkB,CAACT,IAAI,IAAIG,KAAK,CAACK,QAAQ,KAAKC,kBAAkB,CAACD,QAAQ,EAAE;QAC1F,OAAO;UACH,GAAGL,KAAK;UACRO,eAAe,EAAE,IAAI;UACrBC,UAAU,EAAE,IAAI,CAAC;QACrB,CAAC;MACL;IACJ;MACI,OAAOR,KAAK;EACpB;AAEJ,CAAC;AACD,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karim\\\\Desktop\\\\firstapp\\\\src\\\\moviesInfo\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Home from './Home';\nimport Search from './Search';\nimport Serie from './Serie';\nimport Details from './Details';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [series, setSeries] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    // Fetch movies initially\n    axios.get('http://www.omdbapi.com/?apikey=4a78675b&s=star').then(res => setMovies(res.data.Search || []));\n  }, []);\n  useEffect(() => {\n    if (searchTerm) {\n      // Fetch series when the search term changes\n      axios.get(`http://www.omdbapi.com/?apikey=4a78675b&s=${searchTerm}&type=series`).then(res => setSeries(res.data.Search || []));\n    } else {\n      setSeries([]); // Clear the series list if searchTerm is empty\n    }\n  }, [searchTerm]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        setSearchTerm: setSearchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {\n            movie: movies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/serie\",\n          element: /*#__PURE__*/_jsxDEV(Serie, {\n            serie: series\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/movie/:title\",\n          element: /*#__PURE__*/_jsxDEV(Details, {\n            movie: movies\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/serie/:title\",\n          element: /*#__PURE__*/_jsxDEV(DetailsSer, {\n            series: series\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"3v3lgpBx/aj362IK8XZu9z0elW4=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","axios","Home","Search","Serie","Details","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","movies","setMovies","series","setSeries","searchTerm","setSearchTerm","get","then","res","data","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","movie","serie","DetailsSer","_c","$RefreshReg$"],"sources":["C:/Users/karim/Desktop/firstapp/src/moviesInfo/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Home from './Home';\r\nimport Search from './Search';\r\nimport Serie from './Serie';\r\nimport Details from './Details';\r\n\r\nimport './App.css';\r\n\r\nexport default function App() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [series, setSeries] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch movies initially\r\n    axios.get('http://www.omdbapi.com/?apikey=4a78675b&s=star')\r\n      .then(res => setMovies(res.data.Search || []));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchTerm) {\r\n      // Fetch series when the search term changes\r\n      axios.get(`http://www.omdbapi.com/?apikey=4a78675b&s=${searchTerm}&type=series`)\r\n        .then(res => setSeries(res.data.Search || []));\r\n    } else {\r\n      setSeries([]);  // Clear the series list if searchTerm is empty\r\n    }\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Search setSearchTerm={setSearchTerm} />\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home movie={movies} />} />\r\n          <Route path=\"/serie\" element={<Serie serie={series} />} />\r\n          <Route path=\"/movie/:title\" element={<Details movie={movies} />} />\r\n          <Route path=\"/serie/:title\" element={<DetailsSer series={series} />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karim\\\\Desktop\\\\firstapp\\\\src\\\\my\\\\context.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport useFetch from \"./UseEffect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/React.createContext();\n\n/* plz subsribe to thapa technical channel \r\n          https://www.youtube.com/thapatechnical\r\n         */\n\n// we are getting the children and that is app component in our case\nconst AppProvider = ({\n  children\n}) => {\n  _s();\n  const [query, setQuery] = useState(\"hacker\");\n  const {\n    isLoading,\n    isError,\n    movie\n  } = useFetch(`&s=${query}`);\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: {\n      query,\n      movie,\n      setQuery,\n      isLoading,\n      isError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(AppProvider, \"w1UjxEzGk6/IEfVC3RoaolEhMjc=\", false, function () {\n  return [useFetch];\n});\n_c = AppProvider;\nconst useGlobalContext = () => {\n  _s2();\n  return useContext(AppContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport { AppContext, AppProvider, useGlobalContext };\nvar _c;\n$RefreshReg$(_c, \"AppProvider\");","map":{"version":3,"names":["React","useContext","useState","useFetch","jsxDEV","_jsxDEV","AppContext","createContext","AppProvider","children","_s","query","setQuery","isLoading","isError","movie","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["C:/Users/karim/Desktop/firstapp/src/my/context.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport useFetch from \"./UseEffect\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\n/* plz subsribe to thapa technical channel \r\n          https://www.youtube.com/thapatechnical\r\n         */\r\n\r\n// we are getting the children and that is app component in our case\r\nconst AppProvider = ({ children }) => {\r\n  const [query, setQuery] = useState(\"hacker\");\r\n  const { isLoading, isError, movie } = useFetch(`&s=${query}`);\r\n\r\n  return (\r\n    <AppContext.Provider value={{ query, movie, setQuery, isLoading, isError }}>\r\n      {children}\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nconst useGlobalContext = () => {\r\n  return useContext(AppContext);\r\n};\r\n\r\nexport { AppContext, AppProvider, useGlobalContext };"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAOC,QAAQ,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,gBAAGN,KAAK,CAACO,aAAa,CAAC,CAAC;;AAExC;AACA;AACA;;AAEA;AACA,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,QAAQ,CAAC;EAC5C,MAAM;IAAEW,SAAS;IAAEC,OAAO;IAAEC;EAAM,CAAC,GAAGZ,QAAQ,CAAC,MAAMQ,KAAK,EAAE,CAAC;EAE7D,oBACEN,OAAA,CAACC,UAAU,CAACU,QAAQ;IAACC,KAAK,EAAE;MAAEN,KAAK;MAAEI,KAAK;MAAEH,QAAQ;MAAEC,SAAS;MAAEC;IAAQ,CAAE;IAAAL,QAAA,EACxEA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAACX,EAAA,CATIF,WAAW;EAAA,QAEuBL,QAAQ;AAAA;AAAAmB,EAAA,GAF1Cd,WAAW;AAWjB,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC7B,OAAOvB,UAAU,CAACK,UAAU,CAAC;AAC/B,CAAC;AAACkB,GAAA,CAFID,gBAAgB;AAItB,SAASjB,UAAU,EAAEE,WAAW,EAAEe,gBAAgB;AAAG,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
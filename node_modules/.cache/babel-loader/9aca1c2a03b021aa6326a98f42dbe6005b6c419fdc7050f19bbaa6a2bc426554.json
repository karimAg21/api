{"ast":null,"code":"const initialestate = {\n  user: 'admin',\n  pass: '1234'\n};\nconst reducer = (state = initialestate, action) => {\n  switch (action.type) {\n    case \"user\":\n      return {\n        ...state,\n        user: action.payload\n      };\n    case \"pass\":\n      return {\n        ...state,\n        pass: action.payload\n      };\n    default:\n      return state;\n  }\n  const correctCredentials = {\n    user: 'admin',\n    password: '1234'\n  };\n\n  // Check if the user and password match\n  if (state.user === correctCredentials.user && state.password === correctCredentials.password) {}\n};\nexport default reducer;","map":{"version":3,"names":["initialestate","user","pass","reducer","state","action","type","payload","correctCredentials","password"],"sources":["C:/Users/karim/Desktop/firstapp/src/redux/reducer.js"],"sourcesContent":["const initialestate={\r\n    user:'admin',\r\n    pass:'1234'\r\n}\r\nconst reducer=(state= initialestate,action)=>{\r\n    switch(action.type){\r\n        case \"user\":\r\n            return{...state,user:action.payload}\r\n            case \"pass\":\r\n            return{...state,pass:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n    const correctCredentials = { user: 'admin', password: '1234' };\r\n\r\n            // Check if the user and password match\r\n            if (state.user === correctCredentials.user && state.password === correctCredentials.password){}\r\n}\r\nexport default reducer"],"mappings":"AAAA,MAAMA,aAAa,GAAC;EAChBC,IAAI,EAAC,OAAO;EACZC,IAAI,EAAC;AACT,CAAC;AACD,MAAMC,OAAO,GAACA,CAACC,KAAK,GAAEJ,aAAa,EAACK,MAAM,KAAG;EACzC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,MAAM;MACP,OAAM;QAAC,GAAGF,KAAK;QAACH,IAAI,EAACI,MAAM,CAACE;MAAO,CAAC;IACpC,KAAK,MAAM;MACX,OAAM;QAAC,GAAGH,KAAK;QAACF,IAAI,EAACG,MAAM,CAACE;MAAO,CAAC;IACxC;MACI,OAAOH,KAAK;EACpB;EACA,MAAMI,kBAAkB,GAAG;IAAEP,IAAI,EAAE,OAAO;IAAEQ,QAAQ,EAAE;EAAO,CAAC;;EAEtD;EACA,IAAIL,KAAK,CAACH,IAAI,KAAKO,kBAAkB,CAACP,IAAI,IAAIG,KAAK,CAACK,QAAQ,KAAKD,kBAAkB,CAACC,QAAQ,EAAC,CAAC;AAC1G,CAAC;AACD,eAAeN,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}